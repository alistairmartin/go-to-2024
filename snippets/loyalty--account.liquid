{% assign account_loyalty_level_tag = 'swell_vip_mate' %}
{% assign secret_level_tag = 'swell_vip_' | append: settings.last_level_name | downcase %}

{% assign account_total_spend = 0 %}

{% for order in customer.orders %}
  {% if order.financial_status == 'paid' or order.financial_status == 'partially_refunded' %}
    {% assign account_total_spend = account_total_spend | plus: order.total_price | minus: order.total_refunded_amount %}
  {% endif %}
{% endfor %}

{% for tag in customer.tags %}
  {% if tag contains 'swell_vip_' %}
    {% assign account_loyalty_level_tag = tag %}
  {% endif %}
{% endfor %}

{% assign loyalty_levels = settings.loyalty_levels | newline_to_br | split: "<br />" %}
{% assign loyalty_features = settings.loyalty_features | newline_to_br | split: "<br />" %}

{% assign look_for_level = account_loyalty_level_tag | remove_first: 'swell_vip_' | prepend: '|' | append: '|' %}
{% assign compare_settings_loyalty_levels = settings.loyalty_levels | downcase %}

{% assign current_level_index = blank %}
{% assign next_level_index = blank %}
{% assign next_level_cost_remaining = blank %}
{% assign display_next_level_cost_remaining = blank %}

{% assign current_loyalty_details = blank %}
{% assign next_level_cost = blank %}

{%- if compare_settings_loyalty_levels contains look_for_level -%}

  {% for loyalty_level in loyalty_levels  %}

    {% assign should_render = false %}

    {% assign next_level_tag = blank %}

    {% assign last_index = forloop.length %}


    {% assign loyalty_level_details = loyalty_level | split: '|' %}
    {% assign level_name = loyalty_level_details[1] %}
    {% assign level_requirement_cost = loyalty_level_details[3] %}

    {% assign current_level_tag = 'swell_vip_' | append: level_name | downcase %}

    {% if current_level_tag ==  account_loyalty_level_tag %}


      {% assign level = loyalty_level_details[0] %}
      {% assign level_requirement = loyalty_level_details[2] %}

      {% assign level_color = loyalty_level_details[4] %}

      {% assign current_level_index = forloop.index %}

      {% if current_level_index < last_index %}

        {% assign next_level_index = current_level_index | plus: 1 %}
        {% assign next_loyalty_level = loyalty_levels[current_level_index] %}
        {% assign next_loyalty_level_details = next_loyalty_level | split: '|' %}
        {% assign next_level_requirement = next_loyalty_level_details[3] | times: 100 | minus: account_total_spend %}

        {% assign next_level_cost_remaining = level_requirement_cost | times: 100 | minus: account_total_spend %}
        {% assign display_next_level_cost_remaining = next_level_cost_remaining | money_without_currency | replace: ',', '' %}
      {% endif %}

      {% assign current_loyalty_details = loyalty_level %}
      {% assign next_level_cost = level_requirement_cost | times: 100 | plus: next_level_cost_remaining %}

      {% if account_loyalty_level_tag != secret_level_tag and forloop.last == false %}
        {% assign should_render = true %}
      {% elsif account_loyalty_level_tag == secret_level_tag and forloop.last == false %}
        {% assign should_render = true %}
      {% elsif account_loyalty_level_tag == secret_level_tag and forloop.last == true %}
        {% assign should_render = true %}
      {% endif %}

    {% endif %}

  {% endfor %}

{%- endif -%}

<div id="reactLoyalty" data-loyaltylevels='{{settings.loyalty_levels}}' data-currentlevel='{{current_loyalty_details}}' data-nextrequirement='{{next_level_requirement}}' data-showsecret='{{should_render}}' data-loyaltyfeatures='{{loyalty_features}}' data-loyaltycustommsg='{{ settings.loyalty_custom_message }}'></div>

<section className="AccountLoyalty_Section">
    <div className="AccountTimeline_Column"></div>
      <div className="AccountClassification_Column">

      { loyaltyLevels && loyaltyLevels.map((v) => (
        <div className="AccountClassification">
          <div className="MarkerContainer">
            { v.level == currentLevel &&
              <>
                <div className="AccountStatus_CurrentMarker">
                <svg width="27" height="35" viewBox="0 0 27 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M1.21957 8.34917C1.91969 6.60534 2.97721 5.02744 4.32405 3.71705C6.76542 1.50544 9.95108 0.295957 13.2451 0.330047C19.7191 0.330047 26.2691 4.95905 26.2751 13.842C26.2751 21.22 14.3021 33.453 13.7751 33.979C13.7165 34.0519 13.6419 34.1102 13.557 34.1494C13.4722 34.1886 13.3795 34.2076 13.2861 34.205C13.1876 34.2043 13.0903 34.184 12.9998 34.1452C12.9093 34.1064 12.8274 34.0499 12.7591 33.979C12.2281 33.453 0.259054 21.107 0.259054 13.842C0.192263 11.9641 0.519457 10.093 1.21957 8.34917ZM7.82505 12.6C7.82611 14.0473 8.40149 15.4349 9.42484 16.4583C10.4482 17.4816 11.8358 18.057 13.2831 18.058C13.9977 18.0619 14.706 17.9246 15.3675 17.654C16.0289 17.3834 16.6304 16.9849 17.1375 16.4814C17.6446 15.9778 18.0473 15.3791 18.3225 14.7196C18.5976 14.0601 18.7399 13.3527 18.7411 12.638C18.7403 11.1907 18.165 9.80294 17.1416 8.77954C16.1182 7.75613 14.7304 7.18084 13.2831 7.18005C12.5685 7.17636 11.8602 7.31376 11.1988 7.58437C10.5374 7.85497 9.93595 8.25347 9.42889 8.757C8.92183 9.26053 8.51915 9.85919 8.24393 10.5187C7.96871 11.1781 7.82636 11.8855 7.82505 12.6Z" fill={v.color}/>
                </svg>
                  <span className="label">You are here!</span>
                </div>
                <span className="DotMarker__Active" style={{backgroundColor: v.color }}></span>
              </>
            }

            { currentLevel + 1 == v.level && v.level > 1 &&
              <>
                <div className="AccountStatus_Marker">
                  <svg width="27" height="35" viewBox="0 0 27 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M1.21957 8.34917C1.91969 6.60534 2.97721 5.02744 4.32405 3.71705C6.76542 1.50544 9.95108 0.295957 13.2451 0.330047C19.7191 0.330047 26.2691 4.95905 26.2751 13.842C26.2751 21.22 14.3021 33.453 13.7751 33.979C13.7165 34.0519 13.6419 34.1102 13.557 34.1494C13.4722 34.1886 13.3795 34.2076 13.2861 34.205C13.1876 34.2043 13.0903 34.184 12.9998 34.1452C12.9093 34.1064 12.8274 34.0499 12.7591 33.979C12.2281 33.453 0.259054 21.107 0.259054 13.842C0.192263 11.9641 0.519457 10.093 1.21957 8.34917ZM7.82505 12.6C7.82611 14.0473 8.40149 15.4349 9.42484 16.4583C10.4482 17.4816 11.8358 18.057 13.2831 18.058C13.9977 18.0619 14.706 17.9246 15.3675 17.654C16.0289 17.3834 16.6304 16.9849 17.1375 16.4814C17.6446 15.9778 18.0473 15.3791 18.3225 14.7196C18.5976 14.0601 18.7399 13.3527 18.7411 12.638C18.7403 11.1907 18.165 9.80294 17.1416 8.77954C16.1182 7.75613 14.7304 7.18084 13.2831 7.18005C12.5685 7.17636 11.8602 7.31376 11.1988 7.58437C10.5374 7.85497 9.93595 8.25347 9.42889 8.757C8.92183 9.26053 8.51915 9.85919 8.24393 10.5187C7.96871 11.1781 7.82636 11.8855 7.82505 12.6Z" fill="#f9c6b9"/>
                  </svg>
                  <span className="label">${(nextLevelRequirement / 100).toFixed(2)} to go!</span>
                </div>
                <span className="DotMarker__Next"></span>
              </>
            }
          </div>

          <div className="LoyaltyClassificationData">
            <span className="Level" style={{color: v.color}}>LEVEL {v.level}</span>
            <span className="Name">{v.name}</span>
            <span className="RequirementStatement">{v.desc}</span>
          </div>

        </div>
      ))}

    </div>
  </section>

  <section className="AccountLoyaltyFeatures_Section" style={{backgroundColor: '#fce2dc'}}>
    <div className="Container">
      <h3 className="SectionHeading">{loyaltyLevels[currentLevel-1].name} (Level {loyaltyLevels[currentLevel-1].level}) Benefits</h3>
      <ul className="LoyaltyFeatures_List">
        { loyaltyLevels[currentLevel-1].features.map((feature) =>
          <li className="LoyaltyFeature">
            <svg width="16" height="12" viewBox="0 0 16 12" fill='none' xmlns="http://www.w3.org/2000/svg">
            <path d="M5.83 7.305L2.406 4.141L0 6.488L5.83 12L15.547 2.346L13.14 0L5.83 7.305Z" fill={loyaltyLevels[currentLevel-1].color}></path>
            </svg> {feature}
          </li>
        )}
      </ul>
      <div class="Loyalty__CustomMessage"><p>{ rootNode.dataset.loyaltycustommsg }</p></div>
    </div>
  </section>