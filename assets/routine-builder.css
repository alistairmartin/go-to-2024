import React,{useMemo,useState}from "react"; type Product ={id:string;title:string;description?: string;price?: string;// optional,e.g. "$39" variantId?: number;// Shopify numeric variant ID required for /cart/add.js}; function buildRoutine(selected: Product[],maxItems: number){// Implementation omitted for brevity return{am:[],pm: []}}export default function RoutineBuilder({selected,maxItems}: {selected: Product[]; maxItems: number}){const routine = useMemo(() => buildRoutine(selected,maxItems),[selected,maxItems]);const [adding,setAdding] = useState(false);const [addError,setAddError] = useState<string | null>(null);const lineItems = useMemo(() => {return selected .filter(p => typeof p.variantId === "number" && !Number.isNaN(p.variantId)) .map(p => ({id: Number(p.variantId),quantity: 1}));},[selected]);function next(){// Implementation omitted}function prev(){// Implementation omitted}async function addAllToCart(){setAddError(null);if (!lineItems.length){setAddError("No variants available to add. Ensure each selected product has a variantId.");return}try{setAdding(true);const res = await fetch("/cart/add.js",{method: "POST",headers: {"Content-Type": "application/json","Accept": "application/json"},body: JSON.stringify({items: lineItems})});if (!res.ok){const text = await res.text();throw new Error(text || "Failed to add to cart")}// Optional: announce success;theme cart drawers often listen for this document.dispatchEvent(new CustomEvent("routine:add-all",{detail: {count: lineItems.length}}))}catch (err: any){setAddError(err?.message || "Failed to add to cart.")}finally{setAdding(false)}}return (<div> {} {} <div className="rb-review"> <div className="rb-columns"> <div> <h4>AM</h4> <ol>{routine.am.map((p) => <li key={p.id}>{p.title}</li>)}</ol> </div> <div> <h4>PM</h4> <ol>{routine.pm.map((p) => <li key={p.id}>{p.title}</li>)}</ol> </div> </div> {addError && (<div className="rb-conflicts" role="alert" style={{marginTop: 12}}> {addError} </div>)} <div className="rb-review-cta"> <button className="rb-btn rb-btn--primary" onClick={addAllToCart} disabled={adding || lineItems.length === 0} > {adding ? "Adding\2026" : `Add ${lineItems.length} to cart`} </button> </div> </div> </div>)}--- .rb{display:flex;flex-direction:column;gap:2rem;padding:2rem 1rem;background:#fafafa;border-radius:8px}.rb-step h3{font-size:1.2rem;font-weight:600;margin-bottom:.75rem}.rb-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));gap:.75rem}.rb-product{display:flex;flex-direction:column;justify-content:center;border:1px solid #ddd;border-radius:6px;padding:.75rem;background:#fff;cursor:pointer;text-align:left;transition:all .2s ease-in-out}.rb-product:hover{border-color:#bbb;background:#f8f8f8}.rb-product.is-selected{border-color:#222;background:#eee}.rb-title{font-weight:500;margin-bottom:.25rem}.rb-meta{font-size:.8rem;color:#555}.rb-summary{border-top:2px solid #eee;padding-top:1.5rem}.rb-summary h4{font-size:1rem;margin-bottom:.5rem}.rb-columns{display:flex;gap:2rem}.rb-columns ol{margin:0;padding-left:1.25rem}.rb-conflicts{background:#ffe5e5;color:#900;padding:.75rem;border-radius:4px;margin-bottom:1rem}.rb-warnings{background:#fff9e5;color:#995c00;padding:.75rem;border-radius:4px;margin-bottom:1rem}.rb-steps{display:grid;grid-template-columns:repeat(6,1fr);gap:24px;margin-bottom:16px}.rb-step-pill{position:relative;background:none;border:0;padding:8px 0 18px;text-align:left;font-weight:600;cursor:pointer}.rb-step-index{margin-right:6px;opacity:.75}.rb-step-bar{position:absolute;left:0;right:0;bottom:0;height:3px;background:#d9d9d9;border-radius:2px}.rb-step-pill.is-active .rb-step-bar{background:#111}.rb-step-pill.is-done .rb-step-bar{background:#555}.rb-stage{display:grid;grid-template-columns:1fr 1fr;min-height:520px}.rb-hero{background:#f6e1db;min-height:520px;overflow:hidden}.rb-hero>img{width:100%;height:100%;object-fit:cover;display:block}.rb-panel{background:#fff;padding:24px 28px 20px}.rb-h1{font-size:28px;letter-spacing:.04em;margin:6px 0 12px}.rb-why-title{font-size:22px;margin:6px 0 8px;text-align:center}.rb-why-copy{text-align:center;max-width:620px;margin:0 auto 18px;color:#333}.rb-cards{display:grid;gap:16px;margin-bottom:16px}.rb-card{display:grid;grid-template-columns:180px 1fr;gap:16px;border:1px solid #e5e5e5;border-radius:6px;padding:14px;background:#fff}.rb-card-media{display:grid;place-items:center;background:#fafafa;border-radius:4px}.rb-img-ph{width:120px;height:160px;background:#eee;border-radius:4px}.rb-card-head{display:flex;align-items:flex-start;justify-content:space-between;gap:12px}.rb-card-title{font-weight:700;margin-bottom:2px}.rb-card-price{color:#222;margin-top:2px}.rb-bullets{margin:10px 0 12px;padding-left:18px;color:#444}.rb-badge{font-size:12px;padding:4px 8px;border:1px solid #ddd;border-radius:20px}.rb-btn{appearance:none;border:1px solid #ccc;background:#eee;border-radius:6px;padding:10px 14px;font-weight:600;cursor:pointer}.rb-btn.is-selected{background:#d9d9d9}.rb-btn--primary{background:#ddd;border-color:#ddd}.rb-btn--ghost{background:transparent}.rb-nav{display:flex;justify-content:space-between;gap:12px;margin-top:8px}@media (max-width: 980px){.rb-stage{grid-template-columns:1fr}.rb-hero{min-height:240px}.rb-panel{padding:18px}.rb-card{grid-template-columns:120px 1fr}}.rb-alerts{margin:10px 0 14px}.rb-selected{border:1px dashed #ddd;background:#fdfdfd;padding:10px 12px;border-radius:8px;margin:12px 0 16px}.rb-selected-head{display:flex;align-items:center;justify-content:space-between;gap:8px;margin-bottom:8px}.rb-chiprow{display:flex;flex-wrap:wrap;gap:8px}.rb-chip{display:inline-flex;align-items:center;gap:8px;padding:6px 10px;border-radius:999px;border:1px solid #d6d6d6;background:#fff;cursor:pointer;font-size:13px;line-height:1}.rb-chip:hover{border-color:#111;background:#fafafa}.rb-chip-title{font-weight:600}.rb-chip-meta{opacity:.7}.rb-chip-x{margin-left:4px;font-weight:700}.rb-clear{font-size:12px;padding:6px 8px}.rb-review-cta{margin-top:16px;display:flex;gap:12px;align-items:center}
