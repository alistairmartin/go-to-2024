{%- if collection -%}
  {%- assign outerCollectionHandle = collection.handle -%}
{%- endif -%}

{%- assign gridImagesCounter = 0 -%}

{%- if section.settings.background != settings.background and section.settings.background != 'rgba(0,0,0,0)' -%}
  {%- assign blends_with_background = false -%}
{%- else -%}
  {%- assign blends_with_background = true -%}
{%- endif -%}

<style>
  #shopify-section-{{ section.id }} {
    {%- if section.settings.background == 'rgba(0,0,0,0)' -%}
      {%- assign section_background = settings.background -%}
    {%- else -%}
      {%- assign section_background = section.settings.background -%}
    {%- endif -%}

    {%- if section.settings.text_color == 'rgba(0,0,0,0)' -%}
      {%- assign heading_color = settings.heading_color -%}
      {%- assign text_color = settings.text_color -%}
    {%- else -%}
      {%- assign heading_color = section.settings.text_color -%}
      {%- assign text_color = section.settings.text_color -%}
    {%- endif -%}

    {%- if section.settings.button_background == 'rgba(0,0,0,0)' -%}
      {%- assign button_background = settings.primary_button_background -%}
    {%- else -%}
      {%- assign button_background = section.settings.button_background -%}
    {%- endif -%}

    {%- if section.settings.button_text_color == 'rgba(0,0,0,0)' -%}
      {%- assign button_text_color = settings.primary_button_text_color -%}
    {%- else -%}
      {%- assign button_text_color = section.settings.button_text_color -%}
    {%- endif -%}

    --heading-color: {{ heading_color.red }}, {{ heading_color.green }}, {{ heading_color.blue }};
    --text-color: {{ text_color.red }}, {{ text_color.green }}, {{ text_color.blue }};
    --primary-button-background: {{ button_background.red }}, {{ button_background.green }}, {{ button_background.blue }};
    --primary-button-text-color: {{ button_text_color.red }}, {{ button_text_color.green }}, {{ button_text_color.blue }};

    --prev-next-button-background: {{ settings.background.red }}, {{ settings.background.green }}, {{ settings.background.blue }};
    --prev-next-button-color: {{ settings.text_color.red }}, {{ settings.text_color.green }}, {{ settings.text_color.blue }};

    --section-background: {{ section_background.red }}, {{ section_background.green }}, {{ section_background.blue }};
    --section-products-per-row: 2;
    --section-products-per-row-mobile: {{ section.settings.mobile_products_per_rows }}vw;
  }

  @media screen and (min-width: 741px) {
    #shopify-section-{{ section.id }} {
      --section-products-per-row: {{ section.settings.products_per_row | at_most: 3 }};
    }
  }

  @media screen and (min-width: 1000px) {
    #shopify-section-{{ section.id }} {
      --section-products-per-row: {{ section.settings.products_per_row | at_most: 4 }};
    }
  }

  @media screen and (min-width: 1200px) {
    #shopify-section-{{ section.id }} {
      --section-products-per-row: {{ section.settings.products_per_row }};
    }
  }

  {%- if section.settings.enable_background -%}
  #shopify-section-{{ section.id }} .product-list__inner {
    {%- if brand == 'bro-to' -%}
      --product-list-block-spacing: 8px;
      --product-list-column-gap: 8px;
    {%- else %}
      --product-list-block-spacing: 8px;
      --product-list-column-gap: 8px;
    {%- endif -%}
 
  }

  @media screen and (min-width: 741px) {
    #shopify-section-{{ section.id }} .product-list__inner {
      {%- if brand == 'bro-to' -%}
      --product-list-block-spacing: 24px;
      --product-list-column-gap: 24px;
    {%- else %}
      --product-list-block-spacing: 8px;
      --product-list-column-gap: 8px;
    {%- endif -%}
  }
  }
  {%- endif -%}


  {%- for block in section.blocks -%}
        #shopify-section-{{ section.id }} .section__footer {
            --flex-justify-content-mobile: {{ section.settings.flex_justify_content_mobile }};
            --flex-justify-content-desktop: {{ section.settings.flex_justify_content_desktop }};
          }
  {%- endfor -%}
      

</style>

<section class="section {% unless blends_with_background %}section--flush{% endunless %}" {% if section.settings.id != blank %}id="{{ section.settings.id }}"{% endif %}>
  <div class="section__color-wrapper">
    <div class="container {% unless blends_with_background %}vertical-breather{% endunless %}">
      {%- if section.blocks.size > 1 or section.settings.title != blank or section.settings.subheading != blank or section.settings.content != blank -%}
        <header class="section__header {% if section.settings.content != blank %}section__header--tight{% endif %} text-{{ section.settings.header_text_alignment }}">
          {%- if section.settings.title != blank or section.settings.subheading != blank or section.settings.content != blank -%}
            <div class="text-container">
              {%- if section.settings.subheading != blank -%}
                <h2 class="heading heading--small heading--{{ section.settings.font_family_subtitle }}">{{ section.settings.subheading }}</h2>
              {%- endif -%}

              {%- if section.settings.title != blank -%}
                <h3 class="heading h3 heading--{{ section.settings.font_family_title }}">{{ section.settings.title }}</h3>
              {%- endif -%}

              {%- if section.settings.content != blank -%}
                <div class="content">
                  {{- section.settings.content -}}
                </div>
              {%- endif -%}
            </div>
          {%- endif -%}

          {%- if section.blocks.size > 1 -%}
            <tabs-nav class="tabs-nav tabs-nav--center tabs-nav--edge2edge">
              <scrollable-content class="tabs-nav__scroller hide-scrollbar">
                <div class="tabs-nav__scroller-inner">
                  <div class="tabs-nav__item-list">
                    {%- for block in section.blocks -%}
                      {%- capture on_boarding_title -%}{{ 'general.onboarding.collection_title' | t }} {{ forloop.index }}{%- endcapture -%}

                      <button type="button" class="tabs-nav__item heading heading--small" aria-expanded="{% if forloop.first %}true{% else %}false{% endif %}" aria-controls="block-{{ section.id }}-{{ block.id }}" {{ block.shopify_attributes }}>
                        {{- block.settings.label | default: block.settings.collection.title | default: on_boarding_title -}}
                      </button>
                    {%- endfor -%}
                  </div>
                </div>
              </scrollable-content>
            </tabs-nav>
          {%- endif -%}
        </header>
      {%- endif -%}

      <div class="featured-collections">
        {%- for block in section.blocks -%}
          {%- assign collection = block.settings.collection -%}
          {%- assign smallest_image_aspect_ratio = 0 -%}

          <product-list {% if settings.stagger_products_apparition %}stagger-apparition{% endif %} {% unless forloop.first %}hidden{% endunless %} id="block-{{ section.id }}-{{ block.id }}" class="product-list product-list--{{ block.settings.product_list_alignment }} {% if section.settings.enable_background %}product-list__background{% endif %}">
            <div {% unless section.settings.stack_products %}class="scroller"{% endunless %}>
              <div class="product-list__inner {% unless section.settings.stack_products %}product-list__inner--scroller hide-scrollbar{% endunless %}">
                {%- assign number_of_products_minus_one = section.settings.products_per_row | minus: 1 -%}
                {%- assign gap_width = 24.0 | divided_by: section.settings.products_per_row | times: number_of_products_minus_one -%}
                {%- capture sizes_attribute -%}(max-width: 740px) 52vw, calc(min(100vw - 80px, 1520px) / {{ section.settings.products_per_row }} - {{ gap_width | ceil }}px){%- endcapture -%}

                {%- for product in collection.products limit: section.settings.products_count -%}
                  {%- if product.featured_media -%}
                    {%- assign smallest_image_aspect_ratio = smallest_image_aspect_ratio | at_least: product.featured_media.aspect_ratio -%}
                  {%- endif -%}

                  {%- render 'product-item', product: product, collection: collection, reduced_content: true, show_cta: section.settings.show_cta, block: block, sizes_attribute: sizes_attribute, reveal: settings.stagger_products_apparition, section_name: "featured-collections", outerCollectionHandle: outerCollectionHandle, enable_byo_bundle: block.settings.enable_byo_bundle -%}

                  {%- include 'featured-collections--grid-images', validCollectionForImages: validCollectionForImages, reveal: settings.stagger_products_apparition -%}
                {%- else -%}
                  {%- assign smallest_image_aspect_ratio = 1 -%}

                  {%- for i in (1..section.settings.products_count) -%}
                    {%- capture product_image -%}product-{% cycle '1', '2', '3', '4', '5' %}{% endcapture %}
                    {%- render 'product-item-placeholder', product_image: product_image, show_cta: section.settings.show_cta, reveal: settings.stagger_products_apparition -%}
                  {%- endfor -%}
                {%- endfor -%}
              </div>

              {%- if collection.products_count > 5 -%}
              <div class="product-list__dots" aria-hidden="true"></div>
              {%- endif -%}
              </div>

            {%- unless section.settings.stack_products -%}
              {%- if collection.products_count == 0 -%}
                {%- assign products_shown = section.settings.products_count -%}
              {%- else -%}
                {%- assign products_shown = collection.products_count | default: section.settings.products_count | at_most: section.settings.products_count | plus: gridImagesCounter -%}
              {%- endif -%}

              {%- if products_shown > section.settings.products_per_row -%}
                {%- if smallest_image_aspect_ratio == 0 -%}
                  {%- assign smallest_image_aspect_ratio = 1 -%}
                {%- endif -%}


                {%- if collection.products_count > 5 -%}
                <prev-next-buttons class="product-list__prev-next hidden-pocket" style="--smallest-image-aspect-ratio: {{ smallest_image_aspect_ratio }}">
                  <button class="product-list__arrow prev-next-button prev-next-button--prev" disabled>
                    <span class="visually-hidden">{{ 'general.accessibility.previous' | t }}</span>
                    {%- render 'icon' with 'brand-arrow-left', block: true, direction_aware: true -%}
                  </button>

                  <button class="product-list__arrow prev-next-button prev-next-button--next">
                    <span class="visually-hidden">{{ 'general.accessibility.next' | t }}</span>
                    {%- render 'icon' with 'brand-arrow-right', block: true, direction_aware: true -%}
                  </button>
                </prev-next-buttons>
                {%- endif -%}
              {%- endif -%}
            {%- endunless -%}

            {%- if block.settings.button_text != blank -%}
              <div class="section__footer">
                <a href="{{ block.settings.button_url | default: collection.url }}" class="blocks--button {% if block.settings.button_style contains "link" %}link--{% if block.settings.button_style == 'link-with-arrow-white' %}secondary{% else %}primary{% endif %}{% else %}button {{ block.settings.button_style }}{% endif %}" id="block-{{ block.id }}">{{ block.settings.button_text }} {% if block.settings.button_style contains "link-with-arrow" %}{%- render 'icon' with "brand-arrow-right" -%}{% endif %}</a>
              </div>
            {%- endif -%}
          </product-list>
        {%- endfor -%}
      </div>
    </div>
  </div>
</section>


<script>
  document.addEventListener('DOMContentLoaded', function () {
    document
      .querySelectorAll('#shopify-section-{{ section.id }} .product-list__inner--scroller')
      .forEach((scroller) => {
        const dotsContainer = scroller.parentElement.querySelector('.product-list__dots');
        if (!dotsContainer) return;
        const totalItems = scroller.querySelectorAll('.product-item, .product-item-placeholder').length;
        const itemsPerRow = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--section-products-per-row')) || 2;
        const pageCount = Math.ceil(totalItems / itemsPerRow);

        // Create dots
        for (let i = 0; i < pageCount; i++) {
          const dot = document.createElement('span');
          dot.classList.add('dot');
          if (i === 0) dot.classList.add('active');
          dotsContainer.appendChild(dot);
        }

        const dots = dotsContainer.querySelectorAll('span');

        scroller.addEventListener('scroll', () => {
          const scrollLeft = scroller.scrollLeft;
          const scrollWidth = scroller.scrollWidth - scroller.clientWidth;
          const pageIndex = Math.round((scrollLeft / scrollWidth) * (pageCount - 1));

          dots.forEach((dot, index) => {
            dot.classList.toggle('active', index === pageIndex);
          });
        });
      });
  });
</script>



<style>
  .product-list__dots {
    display: none;
    justify-content: center;
    gap: 8px;
    margin-top: 12px;
  }
  .product-list__dots .dot {
    display: block;
    width: 8px;
    height: 8px;
    background: transparent;
    border-radius: 50%;
    border: 1px solid #000;
  }
  .product-list__dots .dot.active {
    background: #f9c6b9;
    border: 1px solid transparent;
  }

@media screen and (min-width: 999px) {
    .product-list__dots {
      display: flex;
    }
  }
</style> 

{% schema %}
{
  "name": "Featured collections",
  "class": "shopify-section--featured-collections",
  "max_blocks": 5,
  "disabled_on": {
    "templates": ["password"],
    "groups": ["header", "custom.overlay"]
  },
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "checkbox",
          "id": "enable_byo_bundle",
          "label": "Enable BYO Bundle",
          "info": "If on the BYO bundle page, and is part of the BYO Bundle offers."
        },
        {
          "type": "text",
          "id": "label",
          "label": "Tab label",
          "info": "Shown when more than 1 collection is featured. Collection title is used if none is set."
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "Button link",
          "info": "If empty, the collection URL is used."
        },
               {
              "type": "radio",
              "id": "button_style",
              "label": "Button Style",
              "options": [
                {
                "value": "button--primary",
                "label": "Button"
              },
              {
                  "value": "button--secondary",
                  "label": "Button (Secondary)"
              },
              {
                  "value": "button--ternary",
                  "label": "Button (Ternary)"
              },
              {
                  "value": "button--ternary-white",
                  "label": "Button (Ternary - White)"
              },
              {
                  "value": "button--outline",
                  "label": "Button (Outline)"
              },
              {
                  "value": "link",
                  "label": "Link"
              },
              {
                  "value": "link-with-arrow",
                  "label": "Link (With Arrow)"
              },
              {
              "value": "link-with-arrow-white",
              "label": "White Link (With Arrow)"
              }
              ],
              "default": "button--primary"
          },
        {
          "type": "radio",
          "id": "product_list_alignment",
          "label": "Product Alignment",
          "info": "If Less than 4 products, position the items center or left.",
          "options": [
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "left",
              "label": "Left"
            }
          ],
          "default": "center"
        },
        {
      "type": "header",
      "content": "Image #1"
    },
    {
      "type": "text",
      "id": "mobile_position_1",
      "label": "Position (Mobile)",
      "info": "Position In The Collection"
    },
    {
      "type": "text",
      "id": "desktop_position_1",
      "label": "Position (Desktop)",
      "info": "Position In The Collection"
    },
    {
      "type": "image_picker",
      "id": "desktop_image_1",
      "label": "Image"
    },
    {
      "type": "image_picker",
      "id": "mobile_image_1",
      "label": "Image (Mobile)"
    },
    {
      "type": "radio",
      "id": "link_type1",
      "label": "Link Type",
      "options": [
        {
          "value": "link",
          "label": "Link"
        },
        {
          "value": "popup",
          "label": "Popup"
        } 
      ]
    },
    {
      "type": "url",
      "id": "desktop_link_1",
      "label": "Link"
    },
    {
      "type": "liquid",
      "id": "popup1",
      "label": "Popup (Embed Code)"
    },
    {
      "type": "radio",
      "id": "mobile_span_1",
      "label": "Column Width (Mobile)",
      "options": [
        {
          "value": "1",
          "label": "1 Column"
        },
        {
          "value": "2",
          "label": "2 Columns"
        }
      ],
      "default": "1"
    },
    {
      "type": "radio",
      "id": "desktop_span_1",
      "label": "Width (Desktop)",
      "options": [
        {
          "value": "1",
          "label": "1 Column"
        },
        {
          "value": "2",
          "label": "2 Columns"
        },
        {
          "value": "3",
          "label": "3 Columns"
        },
        {
          "value": "4",
          "label": "4 Columns (Full)"
        }
      ],
      "default": "2"
    },
    {
      "type": "header",
      "content": "Image #2"
    },
    {
      "type": "text",
      "id": "mobile_position_2",
      "label": "Position (Mobile)",
      "info": "Position In The Collection"
    },
    {
      "type": "text",
      "id": "desktop_position_2",
      "label": "Position (Desktop)",
      "info": "Position In The Collection"
    },
    {
      "type": "image_picker",
      "id": "desktop_image_2",
      "label": "Image"
    },
    {
      "type": "image_picker",
      "id": "mobile_image_2",
      "label": "Image (Mobile)"
    },
    {
      "type": "radio",
      "id": "link_type2",
      "label": "Link Type",
      "options": [
        {
          "value": "link",
          "label": "Link"
        },
        {
          "value": "popup",
          "label": "Popup"
        } 
      ]
    },
    {
      "type": "url",
      "id": "desktop_link_2",
      "label": "Link"
    },
    {
      "type": "liquid",
      "id": "popup2",
      "label": "Popup (Embed Code)"
    },
    {
      "type": "radio",
      "id": "mobile_span_2",
      "label": "Column Width (Mobile)",
      "options": [
        {
          "value": "1",
          "label": "1 Column"
        },
        {
          "value": "2",
          "label": "2 Columns"
        }
      ],
      "default": "1"
    },
    {
      "type": "radio",
      "id": "desktop_span_2",
      "label": "Width (Desktop)",
      "options": [
        {
          "value": "1",
          "label": "1 Column"
        },
        {
          "value": "2",
          "label": "2 Columns"
        },
        {
          "value": "3",
          "label": "3 Columns"
        },
        {
          "value": "4",
          "label": "4 Columns (Full)"
        }
      ],
      "default": "2"
    },
    {
      "type": "header",
      "content": "Image #3"
    },
    {
      "type": "text",
      "id": "mobile_position_3",
      "label": "Position (Mobile)",
      "info": "Position In The Collection"
    },
    {
      "type": "text",
      "id": "desktop_position_3",
      "label": "Position (Desktop)",
      "info": "Position In The Collection"
    },
    {
      "type": "image_picker",
      "id": "desktop_image_3",
      "label": "Image"
    },
    {
      "type": "image_picker",
      "id": "mobile_image_3",
      "label": "Image (Mobile)"
    },
    {
      "type": "radio",
      "id": "link_type3",
      "label": "Link Type",
      "options": [
        {
          "value": "link",
          "label": "Link"
        },
        {
          "value": "popup",
          "label": "Popup"
        } 
      ]
    },
    {
      "type": "url",
      "id": "desktop_link_3",
      "label": "Link"
    },
    {
      "type": "liquid",
      "id": "popup3",
      "label": "Popup (Embed Code)"
    },
    {
      "type": "radio",
      "id": "mobile_span_3",
      "label": "Column Width (Mobile)",
      "options": [
        {
          "value": "1",
          "label": "1 Column"
        },
        {
          "value": "2",
          "label": "2 Columns"
        }
      ],
      "default": "1"
    },
    {
      "type": "radio",
      "id": "desktop_span_3",
      "label": "Width (Desktop)",
      "options": [
        {
          "value": "1",
          "label": "1 Column"
        },
        {
          "value": "2",
          "label": "2 Columns"
        },
        {
          "value": "3",
          "label": "3 Columns"
        },
        {
          "value": "4",
          "label": "4 Columns (Full)"
        }
      ],
      "default": "2"
    }
      ]
    }
  ],
  "settings": [
    {
      "type": "text",
      "id": "id",
      "label": "ID",
      "info": "Optional. Used with in-page navigation."
    },
    {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "select",
      "id": "header_text_alignment",
      "label": "Header Text Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Your title"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Collection"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "Content"
    },
    {
      "type": "select",
      "id": "font_family_subtitle",
      "label": "Font Family (Subtitle)",
      "info": "For Section Header",
      "options": [
        {
          "value": "primary",
          "label": "Primary"
        },
        {
          "value": "secondary",
          "label": "Secondary"
        }
      ],
      "default": "primary"
    },
    {
      "type": "select",
      "id": "font_family_title",
      "label": "Font Family (Title)",
      "info": "For Section Header",
      "options": [
        {
          "value": "primary",
          "label": "Primary"
        },
        {
          "value": "secondary",
          "label": "Secondary"
        }
      ],
      "default": "primary"
    },
    {
      "type": "header",
      "content": "Products"
    },
    {
      "type": "range",
      "id": "products_count",
      "label": "Products to show",
      "min": 4,
      "max": 50,
      "step": 1,
      "default": 8
    },
    {
      "type": "range",
      "id": "mobile_products_per_rows",
      "label": "Products per row (mobile)",
      "min": 1,
      "max": 100,
      "step": 1,
      "default": 52,
      "unit": "%",
      "info": "Percentage of the Window Width. Default 52%."
    },
    {
      "type": "range",
      "id": "products_per_row",
      "label": "Products per row (desktop)",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 4
    },
    {
      "type": "checkbox",
      "id": "stack_products",
      "label": "Stack products",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_cta",
      "label": "Show add to cart below info",
      "info": "If enabled, we recommend using 4 products per row at maximum.",
      "default": true
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button background",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "header",
      "content": "Background"
    },
    {
      "type": "checkbox",
      "id": "enable_background",
      "label": "Enable White Product Card",
      "info": "Will make the background of the product card white, enabling the use of the background setting to be used on the section for contrast."
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "default": "rgba(0,0,0,0)"
    },
        {
      "type": "header",
      "content": "Button Position"
    },
    {
      "type": "select",
      "id": "flex_justify_content_desktop",
      "label": "Button Position (Desktop)",
      "info": "Position the button (Left, Center, Right)",
      "default": "center",
      "options": [
      {
        "value": "unset",
        "label": "Unset"
      },
      {
        "value": "flex-start",
        "label": "Left"
      },
      {
        "value": "center",
        "label": "Center"
      },
      {
        "value": "flex-end",
        "label": "Right"
      }
  ]
  },
    {
      "type": "select",
      "id": "flex_justify_content_mobile",
      "label": "Button Position (Mobile)",
      "info": "Position the button (Left, Center, Right)", 
      "default": "center",
      "options": [
      {
        "value": "unset",
        "label": "Unset"
      },
      {
        "value": "flex-start",
        "label": "Left"
      },
      {
        "value": "center",
        "label": "Center"
      },
      {
        "value": "flex-end",
        "label": "Right"
      }
  ]
}
  ],
  "presets": [
    {
      "name": "Featured collections",
      "blocks": [
        {
          "type": "collection"
        }
      ],
      "settings": {}
    }
  ]
}
{% endschema %}